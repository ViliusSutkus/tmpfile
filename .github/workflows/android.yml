name: android
on:
  push:
    branches: [ master, main ]
    paths-ignore: '**.md'
#  pull_request:
#    branches: [ '**' ]
#   paths-ignore: '**.md'

env:
  ANDROID_NDK:    "22.1.7171670"
  ANDROID_CMAKE:  "3.10.2.4988404"

permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  build:
    environment: ${{ fromJSON('{"refs/heads/master":"BuildWithDeployToSonatype","refs/heads/main":"BuildWithDeployToSonatype"}')[github.event.ref] || 'BuildUnprivileged' }}
    outputs:
      STAGING_REPO: ${{ steps.sonatype.outputs.stagingRepo }}
      STAGING_REPO_URI: ${{ steps.sonatype.outputs.stagingRepoUri }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - uses: android-actions/setup-android@v2
      - run: sdkmanager "ndk;${{env.ANDROID_NDK}}" "cmake;${{env.ANDROID_CMAKE}}"

      - run: ./gradlew assembleRelease

      # Save output from Sonatype repo init
      - name: 'Publish to Sonatype'
        if: github.event.ref == 'refs/heads/master' || github.event.ref == 'refs/heads/main'
        run: ./gradlew publishToSonatype closeSonatypeStagingRepository | tee publishToSonatype.log
        shell: bash #pipefail needed for tee
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

      - name: 'Parse Sonatype repository'
        id: sonatype
        # Created staging repository 'comviliussutkus89-1055' at https://oss.sonatype.org/service/local/repositories/comviliussutkus89-1055/content/
        # .(.+). should be '(.+)', to match 'comviliussutkus89-1055', but we already far too deep in qoutes for a simple \' to work.
        run: perl -ne 'print "::set-output name=stagingRepo::$2\n::set-output name=stagingRepoUri::$3\n::warning ::$1\n" if /^(Created staging repository .(.+). at (.+))$/' < publishToSonatype.log

      - run: ./scripts/prepareSampleAppForStagingRepository sampleapp app --output=build/sampleapp-staging --repository=${{ steps.sonatype.outputs.stagingRepoUri }}

      - name: Build sample app from staging library
        run: ./gradlew build
        working-directory: build/sampleapp-staging

      - uses: actions/upload-artifact@v2
        with:
          name: sampleapp-staging
          path: build/sampleapp-staging/app/build/outputs/apk/debug/app-debug.apk

      - run: ./gradlew publishToMavenLocal
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

      - uses: actions/upload-artifact@v2
        with:
          name: maven-local
          path: ~/.m2

  staging:
    needs: build
    # Only macos VMs come with exposed CPU extensions to run hardware accelerated emulator
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        api-level: [16, 21, 30]
        arch: [x86, x86_64]
        target: [default]
        include:
          - api-level: 30
            arch: x86
            target: google_apis
          - api-level: 30
            arch: x86_64
            target: google_apis
        exclude:
          - api-level: 16
            arch: x86_64
          - api-level: 30
            target: default
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - uses: android-actions/setup-android@v2
      - run: sdkmanager "ndk;${{env.ANDROID_NDK}}" "cmake;${{env.ANDROID_CMAKE}}"

      - run: scripts/prepareAarInstrumentedTests tests --repository=${{ needs.build.outputs.STAGING_REPO_URI }}

      - run: ./gradlew assemble
        working-directory: build/aar-instrumented-tests

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.target }}
          script: ./gradlew connectedCheck
          working-directory: build/aar-instrumented-tests

  production:
    if: github.event.ref == 'refs/heads/master' || github.event.ref == 'refs/heads/main'
    environment: Production
    needs: [build, staging]
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      # @TODO: add enhancement issue id for nexus plugin to skip this manual step
      - run: echo "::warning ::You need to manually go to https://oss.sonatype.org/#stagingRepositories and release a staging repository named ${{ needs.build.outputs.STAGING_REPO }}"

      - uses: actions/checkout@v2
        with:
          # A branch is required for post release version increment commit
          ref: ${{ github.event.ref }}

      - name: Get Released Version
        id: released_version
        run: echo "::set-output name=version::$(./scripts/getVersion)"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "${{ github.event.repository.name }} v${{ steps.released_version.outputs.version }}"
          tag: "v${{ steps.released_version.outputs.version }}"

      - run: ./scripts/incrementVersion --release --patch

      - name: Build sample app from released library
        run: ./gradlew build
        working-directory: sampleapp

      - uses: actions/download-artifact@v2
        with:
          name: maven-local
          path: ~/.m2

      - name: Attach files to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ steps.released_version.outputs.version }}"
          artifacts: "sampleapp/app/build/outputs/apk/debug/app-debug.apk,~/.m2/repository/**"

      - name: Get Unreleased Version
        id: unreleased_version
        run: echo "::set-output name=version::$(./scripts/getVersion)"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Post release version increment from ${{ steps.released_version.outputs.version }} to ${{ steps.unreleased_version.outputs.version }}"
          file_pattern: build.gradle tmpfile/build.gradle README.md sampleapp/app/build.gradle
